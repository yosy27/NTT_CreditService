/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.nttdata.credit.api;

import com.nttdata.credit.model.CreditProductSummary;
import com.nttdata.credit.model.CreditStatus;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.server.ServerWebExchange;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;
import org.springframework.http.codec.multipart.Part;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-09-06T19:14:38.721215100-05:00[America/Lima]")
@Validated
@Api(value = "customers", description = "the customers API")
public interface CustomersApi {

    default CustomersApiDelegate getDelegate() {
        return new CustomersApiDelegate() {};
    }

    /**
     * GET /customers/{customerId}/credit-products : List customer credit products (loans + credit lines)
     *
     * @param customerId  (required)
     * @param kind  (optional)
     * @param status  (optional)
     * @return Product list (status code 200)
     */
    @ApiOperation(value = "List customer credit products (loans + credit lines)", nickname = "listCreditProductsByCustomer", notes = "", response = CreditProductSummary.class, responseContainer = "List", tags={ "Common", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Product list", response = CreditProductSummary.class, responseContainer = "List") })
    @GetMapping(
        value = "/customers/{customerId}/credit-products",
        produces = { "application/json" }
    )
    default Mono<ResponseEntity<Flux<CreditProductSummary>>> listCreditProductsByCustomer(@ApiParam(value = "",required=true) @PathVariable("customerId") String customerId,@ApiParam(value = "", allowableValues = "LOAN, CREDIT_LINE") @Valid @RequestParam(value = "kind", required = false) String kind,@ApiParam(value = "", allowableValues = "ACTIVE, CLOSED, DELINQUENT") @Valid @RequestParam(value = "status", required = false) CreditStatus status, @ApiIgnore final ServerWebExchange exchange) {
        return getDelegate().listCreditProductsByCustomer(customerId, kind, status, exchange);
    }

}
